'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _constants = require('./constants');

var _utils = require('./utils');

var newAssignment = function newAssignment(assignment) {
  var name = assignment.name;

  var assignments = {};
  assignments[name] = assignment;
  return assignments;
};

var updateAssignments = function updateAssignments(state, assignment) {
  var assignments = Object.assign({}, state.assignments, newAssignment(assignment));
  return Object.assign({}, state, { assignments: assignments });
};

/**
 *
 * The state produced by the ab reducer is defined as follows:
 *
 *    tests:
 *      All the active tests
 *
 *    assignments:
 *      All the test group assignments for the user
 *
 *    queue:
 *      Queue of tests to record
 *
 * @param {Object} state - current state
 * @param {Object} action
 * @return {Object} newState
 */

exports.default = function () {
  var state = arguments.length <= 0 || arguments[0] === undefined ? { tests: [], assignments: {}, queue: [], urlTests: [] } : arguments[0];
  var action = arguments[1];
  var type = action.type;

  switch (type) {
    case _constants.QUEUE_RECORD_TEST:
      return Object.assign({}, state, { queue: state.queue.concat(action.treatment) });
    case _constants.RECEIVE_TEST_ASSIGNMENTS:
      return Object.assign({}, state, { assignments: action.assignments });
    case _constants.RECEIVE_TEST_ASSIGNMENT:
      return updateAssignments(state, action.assignment);
    case _constants.RECEIVE_ACTIVE_TESTS:
      return Object.assign({}, state, { tests: action.tests, urlTests: (0, _utils.parseUrlTests)(action.tests) });
    default:
      return state;
  }
};