'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkActiveHydraTestsFactory = undefined;

var _actions = require('./actions');

// 10 minutes
var defaultCheckInterval = 600000;

/**
 * Factory which creates a redux middleware to periodically check for new test
 * assignments. Default interval is 10 minutes.
 * @param {string} url - url to fetch active hydra tests from
 * @param {string} domain - domain to use for the cookie
 * @param {number} threshold - milliseconds to wait between checking hydra tests
 * @param {function} fetchTests - higher order function which should return a thunk for fetching tests.
 */
var checkActiveHydraTestsFactory = exports.checkActiveHydraTestsFactory = function checkActiveHydraTestsFactory(_ref) {
  var url = _ref.url;
  var domain = _ref.domain;
  var hosts = _ref.hosts;
  var _ref$threshold = _ref.threshold;
  var threshold = _ref$threshold === undefined ? defaultCheckInterval : _ref$threshold;
  var _ref$fetchTestsFun = _ref.fetchTestsFun;
  var fetchTestsFun = _ref$fetchTestsFun === undefined ? _actions.fetchTests : _ref$fetchTestsFun;

  var lastCheckTime = +new Date();
  return function (store) {
    return function (next) {
      return function (action) {
        var now = +new Date();
        var nextCheckTime = lastCheckTime + threshold;
        if (now > nextCheckTime) {
          lastCheckTime = now;
          store.dispatch(fetchTestsFun(url, domain, hosts));
        }
        return next(action);
      };
    };
  };
};